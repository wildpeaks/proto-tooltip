#VRML V2.0 utf8

PROTO Tooltip [
	exposedField  SFVec3f  center  0 0 0
	exposedField  SFVec3f  tip     0 0 0
	exposedField  SFVec2f  size    2 2
	exposedField  SFFloat  radius  1
	field         SFBool   solid   TRUE
]{
	DEF ifs IndexedFaceSet {
		solid IS solid
		coord DEF coords Coordinate {}
	}

	Script {
		exposedField  SFVec3f  center          IS center
		exposedField  SFVec3f  tip             IS tip
		exposedField  SFFloat  radius          IS radius
		exposedField  SFVec2f  size            IS size

		field         SFNode   ifs             USE ifs
		field         SFNode   coords          USE coords

		field         MFInt32  tipNone         []
		field         MFInt32  tipBottom       [8 12 9 8 -1]
		field         MFInt32  tipTop          [10 11 12 10 -1]
		field         MFInt32  tipLeft         [4 12 0 4 -1]
		field         MFInt32  tipRight        [7 3 12 7 -1]

		field         MFInt32  tipBottomLeft   [
			0 12 13 0 -1,
			13 12 14 13 -1,
			14 12 15 14 -1,
			15 12 16 15 -1,
			16 12 17 16 -1,
			17 12 18 17 -1,
			18 12 19 18 -1,
			19 12 8 19 -1
		]
		field         MFInt32  tipBottomRight  [
			3 20 12 3 -1,
			20 21 12 20 -1,
			21 22 12 21 -1,
			22 23 12 22 -1,
			23 24 12 23 -1,
			24 25 12 24 -1,
			25 26 12 25 -1,
			26 9 12 26 -1
		]
		field         MFInt32  tipTopLeft      [
			10 12 27 10 -1,
			27 12 28 27 -1,
			28 12 29 28 -1,
			29 12 30 29 -1,
			30 12 31 30 -1,
			31 12 32 31 -1,
			32 12 33 32 -1,
			33 12 4 33 -1
		]
		field         MFInt32  tipTopRight     [
			12 11 34 12 -1,
			12 34 35 12 -1,
			12 35 36 12 -1
			12 36 37 12 -1
			12 37 38 12 -1
			12 38 39 12 -1
			12 39 40 12 -1
			12 40 7 12 -1
		]

		directOutput TRUE
		url "javascript:


		function updateGeometry(){
			var cleanedRadius = Math.max(0, radius);
			var cleanedWidth = Math.max(0, size[0]);
			var cleanedHeight = Math.max(0, size[1]);

			var x1 = cleanedWidth / 2;
			var x2 = x1 + cleanedRadius;
			var x3 = x1 + (0.19509 * cleanedRadius);
			var x4 = x1 + (0.382684 * cleanedRadius);
			var x5 = x1 + (0.55557 * cleanedRadius);
			var x6 = x1 + (0.707107 * cleanedRadius);
			var x7 = x1 + (0.83147 * cleanedRadius);
			var x8 = x1 + (0.92388 * cleanedRadius);
			var x9 = x1 + (0.980785 * cleanedRadius);

			var y1 = cleanedHeight / 2;
			var y2 = y1 + cleanedRadius;
			var y3 = y1 + (0.19509 * cleanedRadius);
			var y4 = y1 + (0.382684 * cleanedRadius);
			var y5 = y1 + (0.55557 * cleanedRadius);
			var y6 = y1 + (0.707107 * cleanedRadius);
			var y7 = y1 + (0.83147 * cleanedRadius);
			var y8 = y1 + (0.92388 * cleanedRadius);
			var y9 = y1 + (0.980785 * cleanedRadius);

			var centerX = center.x;
			var centerY = center.y;

			coords.point = new MFVec3f(
				new SFVec3f(-x2 + centerX, -y1 + centerY, 0),
				new SFVec3f(-x1 + centerX, -y1 + centerY, 0),
				new SFVec3f(x1 + centerX, -y1 + centerY, 0),
				new SFVec3f(x2 + centerX, -y1 + centerY, 0),

				new SFVec3f(-x2 + centerX, y1 + centerY, 0),
				new SFVec3f(-x1 + centerX, y1 + centerY, 0),
				new SFVec3f(x1 + centerX, y1 + centerY, 0),
				new SFVec3f(x2 + centerX, y1 + centerY, 0),

				new SFVec3f(-x1 + centerX, -y2 + centerY, 0),
				new SFVec3f(x1 + centerX, -y2 + centerY, 0),

				new SFVec3f(-x1 + centerX, y2 + centerY, 0),
				new SFVec3f(x1 + centerX, y2 + centerY, 0),

				tip,

				new SFVec3f(-x9 + centerX, -y3 + centerY, 0),
				new SFVec3f(-x8 + centerX, -y4 + centerY, 0),
				new SFVec3f(-x7 + centerX, -y5 + centerY, 0),
				new SFVec3f(-x6 + centerX, -y6 + centerY, 0),
				new SFVec3f(-x5 + centerX, -y7 + centerY, 0),
				new SFVec3f(-x4 + centerX, -y8 + centerY, 0),
				new SFVec3f(-x3 + centerX, -y9 + centerY, 0),

				new SFVec3f(x9 + centerX, -y3 + centerY, 0),
				new SFVec3f(x8 + centerX, -y4 + centerY, 0),
				new SFVec3f(x7 + centerX, -y5 + centerY, 0),
				new SFVec3f(x6 + centerX, -y6 + centerY, 0),
				new SFVec3f(x5 + centerX, -y7 + centerY, 0),
				new SFVec3f(x4 + centerX, -y8 + centerY, 0),
				new SFVec3f(x3 + centerX, -y9 + centerY, 0),

				new SFVec3f(-x3 + centerX, y9 + centerY, 0),
				new SFVec3f(-x4 + centerX, y8 + centerY, 0),
				new SFVec3f(-x5 + centerX, y7 + centerY, 0),
				new SFVec3f(-x6 + centerX, y6 + centerY, 0),
				new SFVec3f(-x7 + centerX, y5 + centerY, 0),
				new SFVec3f(-x8 + centerX, y4 + centerY, 0),
				new SFVec3f(-x9 + centerX, y3 + centerY, 0),

				new SFVec3f(x3 + centerX, y9 + centerY, 0),
				new SFVec3f(x4 + centerX, y8 + centerY, 0),
				new SFVec3f(x5 + centerX, y7 + centerY, 0),
				new SFVec3f(x6 + centerX, y6 + centerY, 0),
				new SFVec3f(x7 + centerX, y5 + centerY, 0),
				new SFVec3f(x8 + centerX, y4 + centerY, 0),
				new SFVec3f(x9 + centerX, y3 + centerY, 0)
			);

			var right = (tip.x >= (x1 + centerX));
			var left = (tip.x <= (-x1 + centerX));
			var top = (tip.y >= (y1 + centerY));
			var bottom = (tip.y <= (-y1 + centerY));

			var tipCoordIndex;
			if (top && right){
				tipCoordIndex = tipTopRight;
			} else if (top && left){
				tipCoordIndex = tipTopLeft;
			} else if (bottom && right){
				tipCoordIndex = tipBottomRight;
			} else if (bottom && left){
				tipCoordIndex = tipBottomLeft;
			} else if (top){
				tipCoordIndex = tipTop;
			} else if (bottom){
				tipCoordIndex = tipBottom;
			} else if (left){
				tipCoordIndex = tipLeft;
			} else if (right){
				tipCoordIndex = tipRight;
			} else {
				tipCoordIndex = tipNone;
			}

			var coordIndex = new MFInt32(
				// Rectangles
				0, 1, 5, 4, 0, -1,
				1, 2, 6, 5, 1, -1,
				2, 3, 7, 6, 2, -1,
				1, 8, 9, 2, 1, -1,
				5, 6, 11, 10, 5, -1,

				// Bottom-Left
				1, 0, 13, 1, -1,
				1, 13, 14, 1, -1,
				1, 14, 15, 1, -1,
				1, 15, 16, 1, -1,
				1, 16, 17, 1, -1,
				1, 17, 18, 1, -1,
				1, 18, 19, 1, -1,
				1, 19, 8, 1, -1,

				// Bottom-Right
				2, 9, 26, 2, -1,
				2, 26, 25, 2, -1,
				2, 25, 24, 2, -1,
				2, 24, 23, 2, -1,
				2, 23, 22, 2, -1,
				2, 22, 21, 2, -1,
				2, 21, 20, 2, -1,
				2, 20, 3, 2, -1,

				// Top Left
				4, 5, 33, 4, -1,
				33, 5, 32, 33, -1,
				32, 5, 31, 32, -1,
				31, 5, 30, 31, -1,
				30, 5, 29, 30, -1,
				29, 5, 28, 29, -1,
				28, 5, 27, 28, -1,
				27, 5, 10, 27, -1,

				// Top Right
				11, 6, 34, 11, -1,
				34, 6, 35, 34, -1,
				35, 6, 36, 35, -1,
				36, 6, 37, 36, -1,
				37, 6, 38, 37, -1,
				38, 6, 39, 38, -1,
				39, 6, 40, 39, -1,
				40, 6, 7, 40, -1
			);
			var l1 = coordIndex.length;
			var l2 = tipCoordIndex.length;
			for (var i = 0; i < l2; i++){
				coordIndex[l1 + i] = tipCoordIndex[i];
			}
			ifs.set_coordIndex = coordIndex;
		}

		function center(){}
		function tip(){}
		function radius(){}
		function size(){}
		function eventsProcessed(){
			updateGeometry();
		}
		function initialize(){
			updateGeometry();
		}

		"
	}
}
